{"version":3,"sources":["containers/Device.js","views/Devices.js","containers/Flash.js"],"names":["Device","HOST_IP","api_key","id","device","setType","setMessage","deleteDevice","axios","delete","then","fetchedData","console","log","data","catch","error","className","battery","battryLevel","title","batteryLevel","type","defaultChecked","onChange","e","state","currentTarget","checked","put","on","onClick","confirmAlert","message","buttons","label","Devices","API_KEY","useState","devices","setDevices","useEffect","fetchDevices","undefined","get","interval","setInterval","clearInterval","Flash","duration","Object","entries","map","persistOnHover"],"mappings":"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","file":"static/js/13.82e8aad2.chunk.js","sourcesContent":["import { MdDeleteForever } from \"react-icons/md\";\nimport { FaMagic } from \"react-icons/fa\";\nimport {\n  TiBatteryLow,\n  TiBatteryMid,\n  TiBatteryHigh,\n  TiBatteryFull,\n} from \"react-icons/ti\";\n\nimport axios from \"axios\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nconst Device = ({ HOST_IP, api_key, id, device, setType, setMessage }) => {\n  const deleteAlert = () => {\n    confirmAlert({\n      title: \"Delete device \" + device[\"name\"],\n      message: \"Are you sure to do this?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => deleteDevice(),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  const deleteDevice = () => {\n    axios\n      .delete(`${HOST_IP}/api/${api_key}/sensors/${id}`)\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Device successfully deleted\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const toggleDevice = (state) => {\n    axios\n      .put(`${HOST_IP}/api/${api_key}/sensors/${id}/config`, { on: state })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\n          device[\"name\"] + \" successfully \" + (state ? \"enabled\" : \"disabled\")\n        );\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const batteryLevel = () => {\n    let battery = device[\"config\"][\"battery\"];\n    let battryLevel = battery + \"%\";\n    console.log(battery);\n    if (battery > 90) {\n      return <TiBatteryFull title={battryLevel} />;\n    } else if (battery > 70) {\n      return <TiBatteryHigh title={battryLevel} />;\n    } else if (battery > 40) {\n      return <TiBatteryMid title={battryLevel} />;\n    } else {\n      return <TiBatteryLow title={battryLevel} />;\n    }\n  };\n\n  return (\n    <div className=\"card device\">\n    <div className=\"row1\">\n      <div className=\"icon\"><FaMagic/></div>\n      <div className=\"text\">{device[\"name\"]}</div>\n    \n    </div>\n    <div className=\"row2\">\n      <div className=\"text\">{\"battery\" in device[\"config\"] && batteryLevel()} Protocol: {device[\"protocol\"]}</div>\n    </div>\n    <div className=\"row3\">\n     <div className=\"dropdown\"></div> {/* replace with dropdown form, (styling missing)*/}\n      <div className=\"switchContainer\">\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            defaultChecked={device[\"config\"][\"on\"]}\n            onChange={(e) => toggleDevice(e.currentTarget.checked)}\n          />\n          <span className=\"slider\"></span>\n        </label>\n      </div>\n     <div className=\"btn red\"><MdDeleteForever title=\"Delete\" onClick={() => deleteAlert()} /></div>\n    </div>\n    <div className=\"label\">Offline</div> {/*only show if device is offline*/}\n    </div>\n  );\n};\n\nexport default Device;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Device from \"../containers/Device\";\nimport Flash from \"../containers/Flash\";\n\nconst Devices = ({ HOST_IP, API_KEY }) => {\n  const [devices, setDevices] = useState({});\n  const [type, setType] = useState(\"none\");\n  const [message, setMessage] = useState(\"no message\");\n\n  useEffect(() => {\n    const fetchDevices = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/sensors`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setDevices(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    fetchDevices();\n    const interval = setInterval(() => {\n      fetchDevices();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [HOST_IP, API_KEY]);\n\n  return (\n    <div className=\"content\">\n      {type !== \"none\" && (\n        <Flash\n          type={type}\n          message={message}\n          duration=\"5000\"\n          setType={setType}\n        />\n      )}\n      <div className=\"cardGrid\">\n        {Object.entries(devices).map(([id, device]) => (\n          <Device\n            key={id}\n            HOST_IP={HOST_IP}\n            api_key={API_KEY}\n            id={id}\n            device={device}\n            setType={setType}\n            setMessage={setMessage}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Devices;\n","import { FaTimes } from \"react-icons/fa\";\nimport FlashMessage from \"react-flash-message\";\n\nexport default function Flash({ type, message, duration, setType }) {\n  return (\n    <FlashMessage duration={duration} persistOnHover={true}>\n      <div className=\"notificationContainer\">\n        <div className={`notification ${type}`}>\n          <p>{message}</p>\n          <div className=\"icon\">\n            <FaTimes onClick={() => setType(\"none\")} />\n          </div>\n        </div>\n      </div>\n    </FlashMessage>\n  );\n}\n"],"sourceRoot":""}
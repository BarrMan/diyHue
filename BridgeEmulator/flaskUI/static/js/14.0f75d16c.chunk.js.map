{"version":3,"sources":["containers/Light.js","containers/AddLight.js","views/Lights.js","containers/Flash.js"],"names":["Light","HOST_IP","api_key","id","light","modelIds","setType","setMessage","deleteLight","axios","delete","then","fetchedData","console","log","data","catch","error","className","onClick","put","alert","title","options","value","onChange","e","modelid","post","placeholder","confirmAlert","message","buttons","label","AddLight","API_KEY","useState","protocol","lightData","setLightData","handleChange","key","onSubmit","evt","preventDefault","formattedData","ip","config","handleForm","type","target","lightName","lightModelID","miID","miModes","miGroups","miBoxPort","domoticzID","jeedomlightAPI","jeedomlightID","Groups","lights","setLights","setModelIds","lightForm","setLightForm","useEffect","fetchLights","undefined","get","interval","setInterval","clearInterval","Flash","duration","style","all","Object","entries","map","persistOnHover"],"mappings":"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","file":"static/js/14.0f75d16c.chunk.js","sourcesContent":["import { FaLightbulb, FaCheck } from \"react-icons/fa\";\nimport { MdDeleteForever, MdSystemUpdate } from \"react-icons/md\";\nimport { RiAlertLine } from \"react-icons/ri\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nconst Light = ({\n  HOST_IP,\n  api_key,\n  id,\n  light,\n  modelIds,\n  setType,\n  setMessage,\n}) => {\n  const deleteAlert = () => {\n    confirmAlert({\n      title: \"Delete light \" + light[\"name\"],\n      message: \"Are you sure to do this?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => deleteLight(),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  const deleteLight = () => {\n    axios\n      .delete(`${HOST_IP}/api/${api_key}/lights/${id}`)\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Light successfully deleted\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const alertLight = () => {\n    axios\n      .put(`${HOST_IP}/api/${api_key}/lights/${id}/state`, { alert: \"select\" })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Light alerted\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const setModelId = (modelid) => {\n    console.log({ [id]: modelid });\n    axios\n      .post(`${HOST_IP}/light-types`, { [id]: modelid })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Modelid updated\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  return (\n    <>\n      <div className=\"iconContainer\">\n        <FaLightbulb onClick={() => alertLight()} />\n      </div>\n      {light[\"name\"]}{\" \"}\n      {(light[\"state\"][\"reachable\"] && <FaCheck title=\"Reachable\" />) || (\n        <RiAlertLine title=\"Unrechable\" />\n      )}\n      <br />\n      <Dropdown\n        options={modelIds}\n        value={light[\"modelid\"]}\n        onChange={(e) => setModelId(e.value)}\n        placeholder=\"Choose light modelid\"\n      />\n      Protocol: {light[\"protocol\"]}\n      <br /> IP: {light[\"protocol_cfg\"][\"ip\"]}\n      <br />\n      <MdDeleteForever title=\"Delete\" onClick={() => deleteAlert()} />{\" \"}\n      <MdSystemUpdate title=\"Update\" />\n      <br />\n      <br />\n    </>\n  );\n};\n\nexport default Light;\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nconst AddLight = ({ HOST_IP, API_KEY }) => {\n  const [lightData, setLightData] = useState({\n    protocol: \"auto\",\n  });\n\n  const handleChange = (key, value) => {\n    setLightData({\n      ...lightData,\n      [key]: value,\n    });\n  };\n\n  const handleForm = (evt) => {\n    evt.preventDefault();\n    const { protocol: lightproto, ip: lightip, ...rest } = lightData;\n    const formattedData = {\n      protocol: lightproto,\n      ip: lightip,\n      config: rest,\n    };\n    axios.post(`${HOST_IP}/api/${API_KEY}/lights`, formattedData);\n  };\n\n  const protocols = [\n    { value: \"auto\", label: \"Autodetect\" },\n    { value: \"domoticz\", label: \"Domoticz\" },\n    { value: \"flex\", label: \"Flex\" },\n    { value: \"jeedom\", label: \"Jeedom\" },\n    { value: \"milight\", label: \"MiLight\" },\n    { value: \"mibox\", label: \"Mi Box\" },\n    { value: \"wiz\", label: \"Wiz\" },\n  ];\n\n  const milightGroups = [\"1\", \"2\", \"3\", \"4\"];\n\n  const milightModes = [\n    { value: \"rgbw\", label: \"RGBW\" },\n    { value: \"cct\", label: \"CCT\" },\n    { value: \"rgb_cct\", label: \"RGB-CCT\" },\n    { value: \"rgb\", label: \"RGB\" },\n  ];\n\n  const lightModelIds = [\n    { value: \"LOM001\", label: \"On/Off Plug\" },\n    { value: \"LWB010\", label: \"Dimmable Light\" },\n    { value: \"LTW001\", label: \"Color temperature Light\" },\n    { value: \"LCT015\", label: \"Color Light\" },\n    { value: \"LST002\", label: \"Color Strip\" },\n  ];\n\n  return (\n    <form onSubmit={(e) => handleForm(e)} className=\"add-form\">\n      <Dropdown\n        options={protocols}\n        value={lightData.protocol}\n        // On Dropdown component use e.value\n        onChange={(e) => handleChange(\"protocol\", e.value)}\n        placeholder=\"Choose light protocol\"\n      />\n      <div className=\"form-control\">\n        <label>Light Ip</label>\n        <input\n          type=\"text\"\n          placeholder=\"192.168.x.x\"\n          value={lightData.ip}\n          // On regular HTML input components use e.taget.value\n          onChange={(e) => handleChange(\"ip\", e.target.value)}\n        />\n      </div>\n      {lightData.protocol !== \"auto\" && (\n        <>\n          <div className=\"form-control\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              value={lightData.lightName}\n              onChange={(e) => handleChange(\"lightName\", e.target.value)}\n              placeholder=\"Name used on diyhue\"\n            />\n          </div>\n          <div className=\"form-control\">\n            <Dropdown\n              options={lightModelIds}\n              value={lightData.lightModelID}\n              onChange={(e) => handleChange(\"lightModelID\", e.value)}\n              placeholder=\"Emulated light type\"\n            />\n          </div>\n        </>\n      )}\n      {(lightData.protocol === \"milight\" || lightData.protocol === \"mibox\") && (\n        <>\n          <div className=\"form-control\">\n            <label>Device ID</label>\n            <input\n              type=\"text\"\n              value={lightData.miID}\n              onChange={(e) => handleChange(\"miID\", e.target.value)}\n              placeholder=\"0x1234\"\n            />\n          </div>\n          <Dropdown\n            options={milightModes}\n            value={lightData.miModes}\n            onChange={(e) => handleChange(\"miModes\", e.value)}\n            placeholder=\"Choose light mode\"\n          />\n          <Dropdown\n            options={milightGroups}\n            value={lightData.miGroups}\n            onChange={(e) => handleChange(\"miGroups\", e.value)}\n            placeholder=\"Choose light group\"\n          />\n        </>\n      )}\n      {lightData.protocol === \"mibox\" && (\n        <div className=\"form-control\">\n          <label>Port</label>\n          <input\n            type=\"number\"\n            placeholder=\"Mi Box port\"\n            value={lightData.miBoxPort}\n            onChange={(e) => handleChange(\"miboxPort\", e.target.value)}\n          />\n        </div>\n      )}\n      {lightData.protocol === \"domoticz\" && (\n        <div className=\"form-control\">\n          <label>Device ID</label>\n          <input\n            type=\"text\"\n            placeholder=\"\"\n            value={lightData.domoticzID}\n            onChange={(e) => handleChange(\"domoticzID\", e.target.value)}\n          />\n        </div>\n      )}\n      {lightData.protocol === \"jeedom\" && (\n        <>\n          <div className=\"form-control\">\n            <label>Light Api</label>\n            <input\n              type=\"text\"\n              placeholder=\"Light Api\"\n              value={lightData.jeedomlightAPI}\n              onChange={(e) => handleChange(\"jeedomlightAPI\", e.target.value)}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label>Light ID</label>\n            <input\n              type=\"text\"\n              placeholder=\"Light ID\"\n              value={lightData.jeedomlightID}\n              onChange={(e) => handleChange(\"jeedomlightID\", e.target.value)}\n            />\n          </div>\n        </>\n      )}\n      <div className=\"form-control\">\n        <input type=\"submit\" value=\"Add Light\" className=\"btn btn-block\" />\n      </div>\n    </form>\n  );\n};\n\nexport default AddLight;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Light from \"../containers/Light\";\nimport AddLight from \"../containers/AddLight\";\nimport Flash from \"../containers/Flash\";\n\nexport default function Groups({ HOST_IP, API_KEY }) {\n  const [lights, setLights] = useState({});\n  const [modelIds, setModelIds] = useState([]);\n  const [type, setType] = useState(\"none\");\n  const [message, setMessage] = useState(\"no message\");\n  const [lightForm, setLightForm] = useState(false);\n\n  const searchForLights = () => {\n    if (API_KEY !== undefined) {\n      axios\n        .post(`${HOST_IP}/api/${API_KEY}/lights`, \"\")\n        .then((fetchedData) => {\n          console.log(fetchedData.data);\n          setMessage(\"Searching for new lights...\");\n          setType(\"none\");\n          setType(\"success\");\n        })\n        .catch((error) => {\n          console.error(error);\n          setMessage(\"Error occured, check browser console\");\n          setType(\"none\");\n          setType(\"error\");\n        });\n    }\n  };\n\n  useEffect(() => {\n    const fetchLights = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/lights`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setLights(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    const fetchModelIds = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/light-types`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setModelIds(fetchedData.data[\"result\"]);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    fetchLights();\n    fetchModelIds();\n    const interval = setInterval(() => {\n      fetchLights();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [HOST_IP, API_KEY]);\n\n  return (\n    <div className=\"content\">\n      {type !== \"none\" && (\n        <Flash\n          type={type}\n          message={message}\n          duration=\"5000\"\n          setType={setType}\n        />\n      )}\n      <div className=\"cardGrid\">\n        <div className=\"linkbtn\" onClick={() => searchForLights()}>\n          Scan For Lights\n          <div className=\"btn btn-block\"></div>\n        </div>\n        <button\n          onClick={() => setLightForm(!lightForm)}\n          className=\"someClassWithCursorPointer\"\n          style={{ all: \"unset\" }}\n        >\n          Add light manually\n        </button>\n        {lightForm && <AddLight API_KEY={API_KEY}></AddLight>}\n        {Object.entries(lights).map(([id, light]) => (\n          <Light\n            key={id}\n            HOST_IP={HOST_IP}\n            api_key={API_KEY}\n            id={id}\n            light={light}\n            modelIds={modelIds}\n            setType={setType}\n            setMessage={setMessage}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { FaTimes } from \"react-icons/fa\";\nimport FlashMessage from \"react-flash-message\";\n\nexport default function Flash({ type, message, duration, setType }) {\n  return (\n    <FlashMessage duration={duration} persistOnHover={true}>\n      <div className=\"notificationContainer\">\n        <div className={`notification ${type}`}>\n          <p>{message}</p>\n          <div className=\"icon\">\n            <FaTimes onClick={() => setType(\"none\")} />\n          </div>\n        </div>\n      </div>\n    </FlashMessage>\n  );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["containers/LightUpdate.js","containers/Light.js","containers/AddLight.js","views/Lights.js","containers/Flash.js"],"names":["LightUpdate","light","lightsCatalog","setMessage","setType","UpdateLight","includes","lenght","className","title","onClick","confirmAlert","message","buttons","label","Light","HOST_IP","api_key","id","modelIds","deleteLight","axios","delete","then","fetchedData","console","log","data","catch","error","put","alert","options","value","onChange","e","modelid","post","placeholder","AddLight","API_KEY","useState","protocol","lightData","setLightData","handleChange","key","onSubmit","evt","preventDefault","formattedData","ip","config","handleForm","type","target","lightName","lightModelID","miID","miModes","miGroups","miBoxPort","domoticzID","jeedomlightAPI","jeedomlightID","Lights","lights","setLights","setlightsCatalog","setModelIds","lightForm","setLightForm","useEffect","fetchLights","undefined","get","interval","setInterval","clearInterval","Flash","duration","style","Object","entries","map","persistOnHover"],"mappings":"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","file":"static/js/14.6e74d479.chunk.js","sourcesContent":["import { MdSystemUpdate } from \"react-icons/md\";\nimport axios from \"axios\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nconst LightUpdate = ({ light, lightsCatalog, setMessage, setType }) => {\n  const updateAlert = () => {\n    confirmAlert({\n      title: \"Update light \" + light[\"name\"] + \" firmware?\",\n      message: \"Are you sure to do this?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => UpdateLight(),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  const UpdateLight = () => {\n    setMessage(\"Begin light firmware update\");\n    setType(\"none\");\n    setType(\"success\");\n  }\n\n\n\n  return (\n    <>\n      {['native_single', 'native_multi'].includes(light[\"protocol\"]) &&\n        lightsCatalog.lenght > 2 &&\n        light[\"protocol_cfg\"][\"version\"] === lightsCatalog[light[\"protocol_cfg\"][\"type\"]][\"version\"] &&\n        <div className=\"btn blue\"><MdSystemUpdate title=\"Update available\" onClick={() => updateAlert()} /></div>\n      }\n    </>\n\n\n  );\n};\n\nexport default LightUpdate;\n","import { FaLightbulb } from \"react-icons/fa\";\nimport { MdDeleteForever, MdSystemUpdate } from \"react-icons/md\";\nimport LightUpdate from \"./LightUpdate\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nconst Light = ({\n  HOST_IP,\n  api_key,\n  id,\n  light,\n  modelIds,\n  setType,\n  setMessage,\n  lightsCatalog,\n}) => {\n  const deleteAlert = () => {\n    confirmAlert({\n      title: \"Delete light \" + light[\"name\"],\n      message: \"Are you sure to do this?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => deleteLight(),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  const deleteLight = () => {\n    axios\n      .delete(`${HOST_IP}/api/${api_key}/lights/${id}`)\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Light successfully deleted\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const alertLight = () => {\n    axios\n      .put(`${HOST_IP}/api/${api_key}/lights/${id}/state`, { alert: \"select\" })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Light alerted\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const setModelId = (modelid) => {\n    console.log({ [id]: modelid });\n    axios\n      .post(`${HOST_IP}/light-types`, { [id]: modelid })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Modelid updated\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  return (\n    <div className=\"devicecard light\">\n      <div className=\"row1\">\n        <div className=\"icon\"><FaLightbulb onClick={() => alertLight()} /></div>\n        <div className=\"text\">{light[\"name\"]}{\" \"}</div>\n\n      </div>\n      <div className=\"row3\">\n        <div className=\"form-control\">\n        <Dropdown\n          options={modelIds}\n          value={light[\"modelid\"]}\n          onChange={(e) => setModelId(e.value)}\n          placeholder=\"Choose light modelid\"\n        />\n        </div>\n        <LightUpdate light={light} lightsCatalog={lightsCatalog} setMessage={setMessage} setType={setType} />\n        <div className=\"btn red\"><MdDeleteForever title=\"Delete\" onClick={() => deleteAlert()} />{\" \"}</div>\n      </div>\n      <div className=\"row4\">\n        <ul>\n          <li>Protocol: {light[\"protocol\"]}</li>\n          <li>IP: {light[\"protocol_cfg\"][\"ip\"]}</li>\n        </ul>\n      </div>\n\n      {(light[\"state\"][\"reachable\"] || <div className=\"label\">Offline</div>)}\n\n    </div>\n\n\n  );\n};\n\nexport default Light;\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nconst AddLight = ({ setType, setMessage, HOST_IP, API_KEY }) => {\n  const [lightData, setLightData] = useState({\n    protocol: \"auto\",\n  });\n\n  const handleChange = (key, value) => {\n    setLightData({\n      ...lightData,\n      [key]: value,\n    });\n  };\n\n  const handleForm = (evt) => {\n    evt.preventDefault();\n    const { protocol: lightproto, ip: lightip, ...rest } = lightData;\n    const formattedData = {\n      protocol: lightproto,\n      ip: lightip,\n      config: rest,\n    };\n    axios.post(`${HOST_IP}/api/${API_KEY}/lights`, formattedData);\n    setMessage(\"Light added\");\n    setType(\"none\");\n    setType(\"success\");\n  };\n\n  const protocols = [\n    { value: \"auto\", label: \"Autodetect\" },\n    { value: \"domoticz\", label: \"Domoticz\" },\n    { value: \"flex\", label: \"Flex\" },\n    { value: \"jeedom\", label: \"Jeedom\" },\n    { value: \"milight\", label: \"MiLight\" },\n    { value: \"mibox\", label: \"Mi Box\" },\n    { value: \"wiz\", label: \"Wiz\" },\n  ];\n\n  const milightGroups = [\"1\", \"2\", \"3\", \"4\"];\n\n  const milightModes = [\n    { value: \"rgbw\", label: \"RGBW\" },\n    { value: \"cct\", label: \"CCT\" },\n    { value: \"rgb_cct\", label: \"RGB-CCT\" },\n    { value: \"rgb\", label: \"RGB\" },\n  ];\n\n  const lightModelIds = [\n    { value: \"LOM001\", label: \"On/Off Plug\" },\n    { value: \"LWB010\", label: \"Dimmable Light\" },\n    { value: \"LTW001\", label: \"Color temperature Light\" },\n    { value: \"LCT015\", label: \"Color Light\" },\n    { value: \"LST002\", label: \"Color Strip\" },\n  ];\n\n  return (\n    <form onSubmit={(e) => handleForm(e)} className=\"add-form\">\n      <Dropdown\n        options={protocols}\n        value={lightData.protocol}\n        // On Dropdown component use e.value\n        onChange={(e) => handleChange(\"protocol\", e.value)}\n        placeholder=\"Choose light protocol\"\n      />\n      <div className=\"form-control\">\n        <label>Light Ip</label>\n        <input\n          type=\"text\"\n          placeholder=\"192.168.x.x\"\n          value={lightData.ip}\n          // On regular HTML input components use e.taget.value\n          onChange={(e) => handleChange(\"ip\", e.target.value)}\n        />\n      </div>\n      {lightData.protocol !== \"auto\" && (\n        <>\n          <div className=\"form-control\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              value={lightData.lightName}\n              onChange={(e) => handleChange(\"lightName\", e.target.value)}\n              placeholder=\"Name used on diyhue\"\n            />\n          </div>\n          <div className=\"form-control\">\n            <Dropdown\n              options={lightModelIds}\n              value={lightData.lightModelID}\n              onChange={(e) => handleChange(\"lightModelID\", e.value)}\n              placeholder=\"Emulated light type\"\n            />\n          </div>\n        </>\n      )}\n      {(lightData.protocol === \"milight\" || lightData.protocol === \"mibox\") && (\n        <>\n          <div className=\"form-control\">\n            <label>Device ID</label>\n            <input\n              type=\"text\"\n              value={lightData.miID}\n              onChange={(e) => handleChange(\"miID\", e.target.value)}\n              placeholder=\"0x1234\"\n            />\n          </div>\n          <Dropdown\n            options={milightModes}\n            value={lightData.miModes}\n            onChange={(e) => handleChange(\"miModes\", e.value)}\n            placeholder=\"Choose light mode\"\n          />\n          <Dropdown\n            options={milightGroups}\n            value={lightData.miGroups}\n            onChange={(e) => handleChange(\"miGroups\", e.value)}\n            placeholder=\"Choose light group\"\n          />\n        </>\n      )}\n      {lightData.protocol === \"mibox\" && (\n        <div className=\"form-control\">\n          <label>Port</label>\n          <input\n            type=\"number\"\n            placeholder=\"Mi Box port\"\n            value={lightData.miBoxPort}\n            onChange={(e) => handleChange(\"miboxPort\", e.target.value)}\n          />\n        </div>\n      )}\n      {lightData.protocol === \"domoticz\" && (\n        <div className=\"form-control\">\n          <label>Device ID</label>\n          <input\n            type=\"text\"\n            placeholder=\"\"\n            value={lightData.domoticzID}\n            onChange={(e) => handleChange(\"domoticzID\", e.target.value)}\n          />\n        </div>\n      )}\n      {lightData.protocol === \"jeedom\" && (\n        <>\n          <div className=\"form-control\">\n            <label>Light Api</label>\n            <input\n              type=\"text\"\n              placeholder=\"Light Api\"\n              value={lightData.jeedomlightAPI}\n              onChange={(e) => handleChange(\"jeedomlightAPI\", e.target.value)}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label>Light ID</label>\n            <input\n              type=\"text\"\n              placeholder=\"Light ID\"\n              value={lightData.jeedomlightID}\n              onChange={(e) => handleChange(\"jeedomlightID\", e.target.value)}\n            />\n          </div>\n        </>\n      )}\n      <div className=\"form-control\">\n        <input type=\"submit\" value=\"Add Light\" className=\"btn btn-block\" />\n      </div>\n    </form>\n  );\n};\n\nexport default AddLight;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Light from \"../containers/Light\";\nimport AddLight from \"../containers/AddLight\";\nimport Flash from \"../containers/Flash\";\n\nexport default function Lights({ HOST_IP, API_KEY }) {\n  const [lights, setLights] = useState({});\n  const [lightsCatalog, setlightsCatalog] = useState({});\n  const [modelIds, setModelIds] = useState([]);\n  const [type, setType] = useState(\"none\");\n  const [message, setMessage] = useState(\"no message\");\n  const [lightForm, setLightForm] = useState(false);\n\n  const searchForLights = () => {\n    if (API_KEY !== undefined) {\n      axios\n        .post(`${HOST_IP}/api/${API_KEY}/lights`, \"\")\n        .then((fetchedData) => {\n          console.log(fetchedData.data);\n          setMessage(\"Searching for new lights...\");\n          setType(\"none\");\n          setType(\"success\");\n        })\n        .catch((error) => {\n          console.error(error);\n          setMessage(\"Error occured, check browser console\");\n          setType(\"none\");\n          setType(\"error\");\n        });\n    }\n  };\n\n  useEffect(() => {\n    const fetchLights = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/lights`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setLights(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    const fetchModelIds = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/light-types`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setModelIds(fetchedData.data[\"result\"]);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    const fetchLightsCatalog = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`https://raw.githubusercontent.com/diyhue/Lights/master/catalog.json`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setlightsCatalog(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n\n    fetchLights();\n    fetchModelIds();\n    fetchLightsCatalog();\n    const interval = setInterval(() => {\n      fetchLights();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [HOST_IP, API_KEY]);\n\n  return (\n    <div className=\"content\">\n      <div className=\"inner\">\n        <div className=\"devicecontainer\">\n      {type !== \"none\" && (\n        <Flash\n          type={type}\n          message={message}\n          duration=\"5000\"\n          setType={setType}\n        />\n      )}\n      <div className=\"cardGrid\">\n        <div className=\"btn generic\" onClick={() => searchForLights()}>\n          Scan For Lights\n          <div className=\"btn btn-block\"></div>\n        </div>\n        <button\n          onClick={() => setLightForm(!lightForm)}\n          className=\"generic\"\n          style={{}}\n        >\n          Add light manually\n        </button>\n        {lightForm && <AddLight\n          setType={setType}\n          setMessage={setMessage}\n          HOST_IP={HOST_IP}\n          API_KEY={API_KEY}>\n        </AddLight>}\n      </div>\n      <div className=\"cardGrid\">\n        {Object.entries(lights).map(([id, light]) => (\n          <Light\n            key={id}\n            HOST_IP={HOST_IP}\n            api_key={API_KEY}\n            id={id}\n            light={light}\n            modelIds={modelIds}\n            setType={setType}\n            setMessage={setMessage}\n            lightsCatalog={lightsCatalog}\n          />\n        ))}\n      </div>\n    </div>\n    </div>\n    </div>\n  );\n}\n","import { FaTimes } from \"react-icons/fa\";\nimport FlashMessage from \"react-flash-message\";\n\nexport default function Flash({ type, message, duration, setType }) {\n  return (\n    <FlashMessage duration={duration} persistOnHover={true}>\n      <div className=\"notificationContainer\">\n        <div className={`notification ${type}`}>\n          <p>{message}</p>\n          <div className=\"icon\">\n            <FaTimes onClick={() => setType(\"none\")} />\n          </div>\n        </div>\n      </div>\n    </FlashMessage>\n  );\n}\n"],"sourceRoot":""}
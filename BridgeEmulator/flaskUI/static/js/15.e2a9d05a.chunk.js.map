{"version":3,"sources":["containers/Scenes.js","color.js","containers/GroupLight.js","containers/ColorPicker.js","containers/Group.js","views/Groups.js"],"names":["Scenes","HOST_IP","api_key","groupId","scenes","Object","entries","filter","scene","group","map","id","className","onClick","axios","put","applyScene","style","color","name","cieToRgb","x","y","brightness","undefined","z","Y","toFixed","X","Z","red","green","blue","Math","pow","round","isNaN","floor","colorTemperatureToRgb","mireds","hectemp","log","rgbToCie","parseFloat","Light","light","switchLight","newState","console","JSON","stringify","background","getStyle","title","type","defaultChecked","onChange","e","on","currentTarget","checked","min","max","defaultValue","bri","parseInt","value","KelvinPicker","lights","groupLights","pickerRef","useRef","picker","useState","animation","setAnimation","useEffect","colors","push","rgb","xy","current","iro","ColorPicker","layout","component","ui","Wheel","options","ref","Group","showContainer","setShowContainer","state","lightBg","step","length","index","slice","handleToggleChange","target","action","handleBriChange","Groups","API_KEY","config","groups","setConfig","fetchConfig","get","then","fetchedData","data","catch","error","interval","setInterval","clearInterval"],"mappings":"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","file":"static/js/15.e2a9d05a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst Scenes = ({ HOST_IP, api_key, groupId, scenes }) => {\n  const applyScene = (scene) => {\n    axios.put(`${HOST_IP}/api/${api_key}/groups/0/action`, { scene: scene });\n  };\n\n  return (\n    <>\n      {Object.entries(scenes)\n        .filter((scene) => scene[1].group === groupId)\n        .map(([id, scene]) => (\n          <div\n            className=\"sceneContainer\"\n            onClick={() => applyScene(id)}\n            key={id}\n          >\n            <p style={{ color: \"#ccc\" }}>{scene.name}</p>\n          </div>\n        ))}\n      <div className=\"clear\"></div>\n    </>\n  );\n};\n\nexport default Scenes;\n","export function cieToRgb(x, y, brightness) {\n  //Set to maximum brightness if no custom value was given (Not the slick ECMAScript 6 way for compatibility reasons)\n  if (brightness === undefined) {\n    brightness = 254;\n  }\n\n  var z = 1.0 - x - y;\n  var Y = (brightness / 254).toFixed(2);\n  var X = Y / y * x;\n  var Z = Y / y * z;\n\n  //Convert to RGB using Wide RGB D65 conversion\n  var red = X * 1.656492 - Y * 0.354851 - Z * 0.255038;\n  var green = -X * 0.707196 + Y * 1.655397 + Z * 0.036152;\n  var blue = X * 0.051713 - Y * 0.121364 + Z * 1.01153;\n\n  //If red, green or blue is larger than 1.0 set it back to the maximum of 1.0\n  if (red > blue && red > green && red > 1.0) {\n    green = green / red;\n    blue = blue / red;\n    red = 1.0;\n  } else if (green > blue && green > red && green > 1.0) {\n    red = red / green;\n    blue = blue / green;\n    green = 1.0;\n  } else if (blue > red && blue > green && blue > 1.0) {\n    red = red / blue;\n    green = green / blue;\n    blue = 1.0;\n  }\n\n  //Reverse gamma correction\n  red =\n    red <= 0.0031308\n      ? 12.92 * red\n      : (1.0 + 0.055) * Math.pow(red, 1.0 / 2.4) - 0.055;\n  green =\n    green <= 0.0031308\n      ? 12.92 * green\n      : (1.0 + 0.055) * Math.pow(green, 1.0 / 2.4) - 0.055;\n  blue =\n    blue <= 0.0031308\n      ? 12.92 * blue\n      : (1.0 + 0.055) * Math.pow(blue, 1.0 / 2.4) - 0.055;\n\n  //Convert normalized decimal to decimal\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n\n  if (isNaN(red)) red = 0;\n\n  if (isNaN(green)) green = 0;\n\n  if (isNaN(blue)) blue = 0;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function colorTemperatureToRgb(mireds) {\n  var hectemp = 20000.0 / mireds;\n\n  var red, green, blue;\n\n  if (hectemp <= 66) {\n    red = 255;\n    green = 99.4708025861 * Math.log(hectemp) - 161.1195681661;\n    blue =\n      hectemp <= 19\n        ? 0\n        : 138.5177312231 * Math.log(hectemp - 10) - 305.0447927307;\n  } else {\n    red = 329.698727446 * Math.pow(hectemp - 60, -0.1332047592);\n    green = 288.1221695283 * Math.pow(hectemp - 60, -0.0755148492);\n    blue = 255;\n  }\n\n  red = red > 255 ? 255 : red;\n  green = green > 255 ? 255 : green;\n  blue = blue > 255 ? 255 : blue;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function rgbToCie(red, green, blue) {\n  //Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  red =\n    red > 0.04045 ? Math.pow((red + 0.055) / (1.0 + 0.055), 2.4) : red / 12.92;\n  green =\n    green > 0.04045\n      ? Math.pow((green + 0.055) / (1.0 + 0.055), 2.4)\n      : green / 12.92;\n  blue =\n    blue > 0.04045\n      ? Math.pow((blue + 0.055) / (1.0 + 0.055), 2.4)\n      : blue / 12.92;\n\n  //RGB values to XYZ using the Wide RGB D65 conversion formula\n  var X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  var Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  var Z = red * 0.000088 + green * 0.07231 + blue * 0.986039;\n\n  //Calculate the xy values from the XYZ values\n  var x = (X / (X + Y + Z)).toFixed(4);\n  var y = (Y / (X + Y + Z)).toFixed(4);\n\n  if (isNaN(x)) x = 0;\n\n  if (isNaN(y)) y = 0;\n\n  return [parseFloat(x), parseFloat(y)];\n}\n","import { RiAlertLine } from \"react-icons/ri\";\nimport axios from \"axios\";\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\nimport { FaLightbulb } from \"react-icons/fa\";\n\nconst Light = ({ HOST_IP, api_key, id, light }) => {\n  const switchLight = (newState) => {\n    console.log(\"Apply state \" + JSON.stringify(newState));\n    axios.put(`${HOST_IP}/api/${api_key}/lights/${id}/state`, newState);\n  };\n\n  const getStyle = () => {\n    if (light[\"state\"][\"on\"]) {\n      let lightBg;\n      if (light[\"state\"][\"colormode\"] === \"xy\") {\n        lightBg = cieToRgb(\n          light[\"state\"][\"xy\"][0],\n          light[\"state\"][\"xy\"][1],\n          254\n        );\n      } else if (light[\"state\"][\"colormode\"] === \"ct\") {\n        lightBg = colorTemperatureToRgb(light[\"state\"][\"ct\"]);\n      } else {\n        lightBg = \"linear-gradient(90deg, rgba(255,212,93,1))\";\n      }\n      return { background: lightBg };\n    }\n  };\n\n  return (\n    <div\n      className={`lightContainer ${\n        light[\"state\"][\"on\"] ? \"textDark\" : \"textLight\"\n      }`}\n      style={getStyle()}\n    >\n      <div className=\"iconContainer\">\n        <FaLightbulb />\n      </div>\n      <div className=\"textContainer\">\n        <p>\n          {light.name}{\" \"}\n          {light[\"state\"][\"reachable\"] || <RiAlertLine title=\"Unrechable\" />}\n        </p>\n      </div>\n      <div className=\"switchContainer\">\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            defaultChecked={light[\"state\"][\"on\"]}\n            onChange={(e) => switchLight({ on: e.currentTarget.checked })}\n          />\n          <span className=\"slider\"></span>\n        </label>\n      </div>\n      <div className=\"slideContainer\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"254\"\n          defaultValue=\"50\"\n          className=\"slider\"\n          onChange={(e) =>\n            switchLight({ bri: parseInt(e.currentTarget.value) })\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Light;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { cieToRgb, rgbToCie } from \"../color\";\nimport iro from \"@jaames/iro\";\nimport axios from \"axios\";\n\nexport default function KelvinPicker({\n  HOST_IP,\n  api_key,\n  lights,\n  groupLights,\n}) {\n  const pickerRef = useRef(null);\n  const picker = useRef(null);\n\n  const [animation, setAnimation] = useState(true);\n\n  useEffect(() => {\n    // Component loads the first time...\n    // animation is true => hide class will be returned, so it is opacity 0 (css file at the end)\n    // It will be set to false so class *line 54* will be switched\n    setAnimation(false);\n\n    //This return function will be fired when the component gets unmounted, so to be sure the color wheel gets faded out\n    return () => {\n      setAnimation(false);\n    };\n  }, []);\n\n  let colors = [];\n  for (const [light] of groupLights.entries()) {\n    if (\"xy\" in lights[light][\"state\"]) {\n      colors.push(\n        cieToRgb(\n          lights[light][\"state\"][\"xy\"][0],\n          lights[light][\"state\"][\"xy\"][1],\n          254\n        )\n      );\n    }\n  }\n  const onChange = (newState) => {\n    let rgb = newState.rgb;\n\n    console.log(newState.rgb);\n    console.log(\"Apply state \" + JSON.stringify(newState));\n    axios.put(\n      `${HOST_IP}/api/${api_key}/lights/${\n        groupLights[newState[\"index\"]]\n      }/state`,\n      { xy: rgbToCie(rgb[\"r\"], rgb[\"g\"], rgb[\"b\"]) }\n    );\n  };\n\n  useEffect(() => {\n    if (pickerRef.current && !picker.current) {\n      picker.current = new iro.ColorPicker(pickerRef.current, {\n        layout: [\n          {\n            component: iro.ui.Wheel,\n            options: {},\n          },\n        ],\n        colors: colors,\n      });\n      //console.log(picker.current.state.color.rgb)\n      picker.current.on(\"input:end\", onChange);\n    }\n  }, [onChange]);\n  return <div ref={pickerRef} className={animation ? \"hide\" : \"show\"}></div>;\n}\n","import {\n  FaCaretLeft,\n  FaList,\n  FaPalette,\n  FaTint,\n  FaCouch,\n} from \"react-icons/fa\";\nimport { BsFillHouseDoorFill } from \"react-icons/bs\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Scenes from \"./Scenes\";\nimport Light from \"./GroupLight\";\nimport ColorPicker from \"./ColorPicker\";\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\n\nconst Group = ({ HOST_IP, api_key, id, group, lights, scenes }) => {\n  const [showContainer, setShowContainer] = useState(\"closed\");\n\n  const handleToggleChange = (state) => {\n    const newState = { on: state };\n    group.state[\"any_on\"] = state;\n    console.log(\"Apply state \" + JSON.stringify(newState));\n    axios.put(`${HOST_IP}/api/${api_key}/groups/${id}/action`, newState);\n  };\n\n  const handleBriChange = (state) => {\n    const newState = { bri: state };\n    group.action[\"bri\"] = state;\n    console.log(\"Apply state \" + JSON.stringify(newState));\n    axios.put(`${HOST_IP}/api/${api_key}/groups/${id}/action`, newState);\n  };\n\n  const getStyle = () => {\n    if (group.state[\"any_on\"]) {\n      let lightBg = \"linear-gradient(90deg, \";\n      let step = 100 / group[\"lights\"].length;\n      for (const [index, light] of group.lights.entries()) {\n        if (lights[light][\"state\"][\"colormode\"] === \"xy\") {\n          if (group[\"lights\"].length === 1) {\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\n          }\n          lightBg =\n            lightBg +\n            cieToRgb(\n              lights[light][\"state\"][\"xy\"][0],\n              lights[light][\"state\"][\"xy\"][1],\n              254\n            ) +\n            \" \" +\n            Math.floor(step * (index + 1)) +\n            \"%,\";\n        } else if (lights[light][\"state\"][\"colormode\"] === \"ct\") {\n          if (group[\"lights\"].length === 1) {\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\n          }\n          lightBg =\n            lightBg +\n            colorTemperatureToRgb(lights[light][\"state\"][\"ct\"]) +\n            \" \" +\n            Math.floor(step * (index + 1)) +\n            \"%,\";\n        } else {\n          if (group[\"lights\"].length === 1) {\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\n          }\n          lightBg =\n            lightBg +\n            \"rgba(255,212,93,1) \" +\n            Math.floor(step * (index + 1)) +\n            \"%,\";\n        }\n      }\n      return { background: lightBg.slice(0, -1) + \")\" };\n    }\n  };\n\n  return (\n    <div\n      className={`groupContainer ${\n        group.state[\"any_on\"] ? \"textDark\" : \"textLight\"\n      } ${showContainer !== \"closed\" ? \"expanded\" : \"\"}`}\n      style={getStyle()}\n    >\n      {showContainer !== \"closed\" && (\n        <div className=\"header\">\n          <div onClick={() => setShowContainer(\"closed\")}>\n            <div className=\"icon\">\n              <FaCaretLeft />\n            </div>\n            <div className=\"text\">close</div>\n          </div>\n          <div\n            className={`tab ${showContainer === \"lights\" ? \"active\" : \"\"}`}\n            onClick={() => setShowContainer(\"lights\")}\n          >\n            <FaList />\n          </div>\n          <div\n            className={`tab ${showContainer === \"scenes\" ? \"active\" : \"\"}`}\n            onClick={() => setShowContainer(\"scenes\")}\n          >\n            <FaPalette />\n          </div>\n          <div\n            className={`tab ${showContainer === \"colorPicker\" ? \"active\" : \"\"}`}\n            onClick={() => setShowContainer(\"colorPicker\")}\n          >\n            <FaTint />\n          </div>\n        </div>\n      )}\n      <div\n        className=\"overlayBtn\"\n        onClick={() => setShowContainer(\"colorPicker\")}\n      ></div>\n      <div className=\"iconContainer\">\n        {group[\"type\"] === \"Zone\" ? <FaCouch /> : <BsFillHouseDoorFill />}\n      </div>\n      <div className=\"textContainer\">\n        <p>{group.name}</p>\n      </div>\n      <div className=\"switchContainer\">\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            value={group.state[\"any_on\"]}\n            checked={group.state[\"any_on\"]}\n            onChange={(e) => handleToggleChange(e.target.checked)}\n          />\n          <span className=\"slider\"></span>\n        </label>\n      </div>\n      <div className=\"slideContainer\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"254\"\n          value={group.action[\"bri\"]}\n          step=\"1\"\n          className=\"slider\"\n          onChange={(e) => handleBriChange(parseInt(e.target.value))}\n        />\n      </div>\n      <div className=\"dimmer\">\n        {showContainer === \"scenes\" && (\n          <Scenes\n            HOST_IP={HOST_IP}\n            api_key={api_key}\n            groupId={id}\n            scenes={scenes}\n          />\n        )}\n        {showContainer === \"lights\" && (\n          <div className=\"lightsContainer\">\n            {group.lights.map((light) => (\n              <Light\n                HOST_IP={HOST_IP}\n                api_key={api_key}\n                key={light}\n                id={light}\n                light={lights[light]}\n              />\n            ))}\n          </div>\n        )}\n        {showContainer === \"colorPicker\" && (\n          <ColorPicker\n            HOST_IP={HOST_IP}\n            api_key={api_key}\n            lights={lights}\n            groupLights={group.lights}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Group;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Group from \"../containers/Group\";\n\nexport default function Groups({ HOST_IP, API_KEY }) {\n  const [config, setConfig] = useState({\n    config: {},\n    lights: {},\n    groups: {},\n    scenes: {},\n  });\n\n  useEffect(() => {\n    const fetchConfig = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/api/${API_KEY}`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setConfig(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    fetchConfig();\n    const interval = setInterval(() => {\n      fetchConfig();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [HOST_IP, API_KEY]);\n\n  return (\n    <div className=\"content\">\n      <div className=\"cardGrid\">\n        {Object.entries(config.groups)\n          .filter((group) => group[1].type !== \"Entertainment\")\n          .map(([id, group]) => (\n            <Group\n              key={id}\n              api_key={API_KEY}\n              HOST_IP={HOST_IP}\n              id={id}\n              group={group}\n              lights={config.lights}\n              scenes={config.scenes}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}
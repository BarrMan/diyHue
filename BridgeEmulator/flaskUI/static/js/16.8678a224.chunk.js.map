{"version":3,"sources":["color.js","static/images/nightsky.jpg","static/images/sunset.jpg","static/images/galaxy.jpg","containers/Scenes.js","containers/GroupLight.js","containers/ColorPicker.js","containers/ColorTempPicker.js","containers/Group.js","views/Groups.js"],"names":["cieToRgb","x","y","brightness","undefined","z","Y","toFixed","X","Z","red","green","blue","Math","pow","round","isNaN","floor","colorTemperatureToRgb","mireds","hectemp","log","rgbToCie","parseFloat","Scenes","HOST_IP","api_key","groupId","scenes","sceneModal","setSceneModal","closeModal","isOpen","onAfterOpen","onRequestClose","contentLabel","className","onClick","Object","entries","filter","scene","group","map","id","style","background","nightsky","backgroundSize","axios","put","applyScene","lightstates","item","index","lightstate","light","state","applyLightState","name","Light","switchLight","newState","console","JSON","stringify","getStyle","title","type","defaultChecked","onChange","e","on","currentTarget","checked","min","max","defaultValue","bri","parseInt","value","KelvinPicker","lights","groupLights","pickerRef","useRef","picker","useState","setAnimation","useEffect","colors","push","rgb","xy","current","iro","ColorPicker","layout","component","ui","Wheel","options","ref","kelvin","mirek","layoutDirection","Slider","sliderType","sliderShape","color","Group","showContainer","setShowContainer","lightsCapabilities","setLightsCapabilities","barIconVariants","opened","opacity","closed","includes","inspectLightsCapabilities","debouncedChangeHandler","useCallback","debounce","action","lightBg","step","length","slice","fill","onLights","offLights","statusLights","handleToggleChange","target","AnimatePresence","initial","motion","div","animate","exit","variants","open","height","collapsed","transition","duration","AnimateSharedLayout","whileHover","scale","whileTap","exitBeforeEnter","section","rotate","Groups","API_KEY","config","groups","setConfig","fetchConfig","get","then","fetchedData","data","catch","error","interval","setInterval","clearInterval"],"mappings":"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","file":"static/js/16.8678a224.chunk.js","sourcesContent":["export function cieToRgb(x, y, brightness) {\n  //Set to maximum brightness if no custom value was given (Not the slick ECMAScript 6 way for compatibility reasons)\n  if (brightness === undefined) {\n    brightness = 254;\n  }\n\n  var z = 1.0 - x - y;\n  var Y = (brightness / 254).toFixed(2);\n  var X = Y / y * x;\n  var Z = Y / y * z;\n\n  //Convert to RGB using Wide RGB D65 conversion\n  var red = X * 1.656492 - Y * 0.354851 - Z * 0.255038;\n  var green = -X * 0.707196 + Y * 1.655397 + Z * 0.036152;\n  var blue = X * 0.051713 - Y * 0.121364 + Z * 1.01153;\n\n  //If red, green or blue is larger than 1.0 set it back to the maximum of 1.0\n  if (red > blue && red > green && red > 1.0) {\n    green = green / red;\n    blue = blue / red;\n    red = 1.0;\n  } else if (green > blue && green > red && green > 1.0) {\n    red = red / green;\n    blue = blue / green;\n    green = 1.0;\n  } else if (blue > red && blue > green && blue > 1.0) {\n    red = red / blue;\n    green = green / blue;\n    blue = 1.0;\n  }\n\n  //Reverse gamma correction\n  red =\n    red <= 0.0031308\n      ? 12.92 * red\n      : (1.0 + 0.055) * Math.pow(red, 1.0 / 2.4) - 0.055;\n  green =\n    green <= 0.0031308\n      ? 12.92 * green\n      : (1.0 + 0.055) * Math.pow(green, 1.0 / 2.4) - 0.055;\n  blue =\n    blue <= 0.0031308\n      ? 12.92 * blue\n      : (1.0 + 0.055) * Math.pow(blue, 1.0 / 2.4) - 0.055;\n\n  //Convert normalized decimal to decimal\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n\n  if (isNaN(red)) red = 0;\n\n  if (isNaN(green)) green = 0;\n\n  if (isNaN(blue)) blue = 0;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function colorTemperatureToRgb(mireds) {\n  var hectemp = 20000.0 / mireds;\n\n  var red, green, blue;\n\n  if (hectemp <= 66) {\n    red = 255;\n    green = 99.4708025861 * Math.log(hectemp) - 161.1195681661;\n    blue =\n      hectemp <= 19\n        ? 0\n        : 138.5177312231 * Math.log(hectemp - 10) - 305.0447927307;\n  } else {\n    red = 329.698727446 * Math.pow(hectemp - 60, -0.1332047592);\n    green = 288.1221695283 * Math.pow(hectemp - 60, -0.0755148492);\n    blue = 255;\n  }\n\n  red = red > 255 ? 255 : red;\n  green = green > 255 ? 255 : green;\n  blue = blue > 255 ? 255 : blue;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function rgbToCie(red, green, blue) {\n  //Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  red =\n    red > 0.04045 ? Math.pow((red + 0.055) / (1.0 + 0.055), 2.4) : red / 12.92;\n  green =\n    green > 0.04045\n      ? Math.pow((green + 0.055) / (1.0 + 0.055), 2.4)\n      : green / 12.92;\n  blue =\n    blue > 0.04045\n      ? Math.pow((blue + 0.055) / (1.0 + 0.055), 2.4)\n      : blue / 12.92;\n\n  //RGB values to XYZ using the Wide RGB D65 conversion formula\n  var X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  var Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  var Z = red * 0.000088 + green * 0.07231 + blue * 0.986039;\n\n  //Calculate the xy values from the XYZ values\n  var x = (X / (X + Y + Z)).toFixed(4);\n  var y = (Y / (X + Y + Z)).toFixed(4);\n\n  if (isNaN(x)) x = 0;\n\n  if (isNaN(y)) y = 0;\n\n  return [parseFloat(x), parseFloat(y)];\n}\n","export default __webpack_public_path__ + \"static/media/nightsky.a7e58287.jpg\";","export default __webpack_public_path__ + \"static/media/sunset.f62d6721.jpg\";","export default __webpack_public_path__ + \"static/media/galaxy.6305f309.jpg\";","import Modal from 'react-modal';\nimport axios from \"axios\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\n\nimport nightsky from \"../static/images/nightsky.jpg\";\nimport sunset from \"../static/images/sunset.jpg\";\nimport galaxy from \"../static/images/galaxy.jpg\";\n\n\nconst Scenes = ({ HOST_IP, api_key, groupId, scenes, sceneModal, setSceneModal }) => {\n  const applyScene = (scene) => {\n    axios.put(`${HOST_IP}/api/${api_key}/groups/0/action`, { scene: scene });\n  };\n\n  const applyLightState = (light, state) => {\n    axios.put(`${HOST_IP}/api/${api_key}/lights/${light}/state`, state);\n  };\n\n  function openModal() {\n    setSceneModal(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    // subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setSceneModal(false);\n  }\n\n  const getStyle = (lightstate) => {\n    let color;\n    if (\"xy\" in lightstate) {\n      color = cieToRgb(lightstate[\"xy\"][0], lightstate[\"xy\"][1], 254);\n    } else if (\"ct\" in lightstate) {\n      color = colorTemperatureToRgb(lightstate[\"ct\"]);\n    } else {\n      color = \"rgba(200,200,200,1)\";\n    }\n    return color;\n  }\n\n  return (\n    <Modal\n      isOpen={sceneModal}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      contentLabel=\"Example Modal\"\n    >\n      <div className=\"header\">\n        <div className=\"headline\">Scene Picker</div>\n        <div className=\"iconbox\"><button onClick={closeModal}><FaTimes /></button></div>\n      </div>\n      <div className=\"scenecontainer\"\n      >\n        {Object.entries(scenes)\n          .filter((scene) => scene[1].group === groupId)\n          .map(([id, scene]) => (\n            <div className=\"scene\" style={{ background: `url(${nightsky})`, backgroundSize: 'cover', }} onClick={() => applyScene(id)}>\n              <div className=\"dimmer\">\n                {Object.entries(scene.lightstates)\n                  .filter((item, index) => (index < 5))\n                  .map(([light, state]) => (\n                        <div className=\"color\"\n                          style={{ background: `${getStyle(state)}` }}\n                          onClick={() => applyLightState(light, state)}\n                        >\n                        </div>\n                  ))}\n                <div className=\"name\">{scene.name}</div>\n              </div>\n              <div className=\"dynamiccontrol\"><i className=\"far fa-play-circle\"></i></div>\n            </div>\n          ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default Scenes;\n","import { RiAlertLine } from \"react-icons/ri\";\nimport axios from \"axios\";\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\nimport { FaLightbulb } from \"react-icons/fa\";\n\nconst Light = ({ HOST_IP, api_key, id, light }) => {\n  const switchLight = (newState) => {\n    console.log(\"Apply state \" + JSON.stringify(newState));\n    axios.put(`${HOST_IP}/api/${api_key}/lights/${id}/state`, newState);\n  };\n\n  const getStyle = () => {\n    if (light[\"state\"][\"on\"]) {\n      let lightBg;\n      if (light[\"state\"][\"colormode\"] === \"xy\") {\n        lightBg = cieToRgb(\n          light[\"state\"][\"xy\"][0],\n          light[\"state\"][\"xy\"][1],\n          254\n        );\n      } else if (light[\"state\"][\"colormode\"] === \"ct\") {\n        lightBg = colorTemperatureToRgb(light[\"state\"][\"ct\"]);\n      } else {\n        lightBg = \"linear-gradient(90deg, rgba(255,212,93,1))\";\n      }\n      return { background: lightBg };\n    }\n  };\n\n  return (\n    <div className=\"groupCard light\">\n      <div className=\"row top\">\n        <div className=\"gradient\" style={getStyle()}><FaLightbulb /></div>\n        <div className=\"text\"><p className=\"name\">{light.name}{\" \"}\n          {light[\"state\"][\"reachable\"] || <RiAlertLine title=\"Unrechable\" />}</p></div>\n        <div className=\"switchContainer\"><label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            defaultChecked={light[\"state\"][\"on\"]}\n            onChange={(e) => switchLight({ on: e.currentTarget.checked })}\n          />\n          <span className=\"slider\">\n          </span></label></div>\n      </div>\n      <div className=\"row\"><div className=\"sliderContainer\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"254\"\n          defaultValue={light[\"state\"][\"bri\"]}\n          className=\"slider\"\n          onChange={(e) =>\n            switchLight({ bri: parseInt(e.currentTarget.value) })\n          }\n        />\n      </div></div>\n    </div>\n\n  );\n};\n\n\n\n\n\nexport default Light;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { cieToRgb, rgbToCie } from \"../color\";\nimport iro from \"@jaames/iro\";\nimport axios from \"axios\";\n\nexport default function KelvinPicker({\n  HOST_IP,\n  api_key,\n  lights,\n  groupLights,\n}) {\n  const pickerRef = useRef(null);\n  const picker = useRef(null);\n\n  const [animation, setAnimation] = useState(true);\n\n  useEffect(() => {\n    // Component loads the first time...\n    // animation is true => hide class will be returned, so it is opacity 0 (css file at the end)\n    // It will be set to false so class *line 54* will be switched\n    setAnimation(false);\n\n    //This return function will be fired when the component gets unmounted, so to be sure the color wheel gets faded out\n    return () => {\n      setAnimation(false);\n    };\n  }, []);\n\n  let colors = [];\n  for (const [index, light] of groupLights.entries()) {\n    console.log(light);\n    if (\"xy\" in lights[light][\"state\"]) {\n      colors.push(\n        cieToRgb(\n          lights[light][\"state\"][\"xy\"][0],\n          lights[light][\"state\"][\"xy\"][1],\n          254\n        )\n      );\n    }\n  }\n  const onChange = (newState) => {\n    let rgb = newState.rgb;\n\n    console.log(newState.rgb);\n    console.log(\"Apply state \" + JSON.stringify(newState));\n    axios.put(\n      `${HOST_IP}/api/${api_key}/lights/${groupLights[newState[\"index\"]]\n      }/state`,\n      { xy: rgbToCie(rgb[\"r\"], rgb[\"g\"], rgb[\"b\"]) }\n    );\n  };\n\n  useEffect(() => {\n    if (pickerRef.current && !picker.current) {\n      picker.current = new iro.ColorPicker(pickerRef.current, {\n        layout: [\n          {\n            component: iro.ui.Wheel,\n            options: {},\n          },\n        ],\n        colors: colors,\n      });\n      //console.log(picker.current.state.color.rgb)\n      picker.current.on(\"input:end\", onChange);\n    }\n  }, [onChange]);\n  return <div ref={pickerRef}></div>;\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { colorTemperatureToRgb, rgbToCie } from \"../color\";\nimport iro from \"@jaames/iro\";\nimport axios from \"axios\";\n\nexport default function KelvinPicker({\n  HOST_IP,\n  api_key,\n  group,\n  groupId\n}) {\n  const pickerRef = useRef(null);\n  const picker = useRef(null);\n\n  const [animation, setAnimation] = useState(true);\n\n  useEffect(() => {\n    // Component loads the first time...\n    // animation is true => hide class will be returned, so it is opacity 0 (css file at the end)\n    // It will be set to false so class *line 54* will be switched\n    setAnimation(false);\n\n    //This return function will be fired when the component gets unmounted, so to be sure the color wheel gets faded out\n    return () => {\n      setAnimation(false);\n    };\n  }, []);\n\n  const onChange = (newState) => {\n    let kelvin = newState.kelvin;\n    let mirek = Math.floor((11000 - kelvin) / 25.5 + 153);\n    console.log(\"#########\");\n    console.log(mirek);\n    console.log(colorTemperatureToRgb(group[\"action\"][\"ct\"]));\n    console.log(\"Apply state \" + JSON.stringify(newState));\n    axios.put(\n      `${HOST_IP}/api/${api_key}/groups/${groupId}/action`,\n      { 'ct': mirek }\n    );\n  };\n\n  useEffect(() => {\n    if (pickerRef.current && !picker.current) {\n      picker.current = new iro.ColorPicker(pickerRef.current, {\n        layoutDirection: 'horizontal',\n        layout: [\n          {\n            component: iro.ui.Slider,\n            options: {\n              sliderType: 'kelvin',\n              sliderShape: 'circle'\n            }\n          },\n        ],\n        color: colorTemperatureToRgb(group[\"action\"][\"ct\"])\n      });\n      picker.current.on(\"input:end\", onChange);\n    }\n  }, [onChange]);\n  return <div ref={pickerRef}></div>;\n}\n","import {\r\n  FaCouch,\r\n  FaChevronDown,\r\n  FaImages,\r\n  FaLightbulb,\r\n  FaPalette,\r\n} from \"react-icons/fa\";\r\nimport { BsFillHouseDoorFill } from \"react-icons/bs\";\r\nimport { MdInvertColors } from \"react-icons/md\";\r\nimport { useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport Scenes from \"./Scenes\";\r\nimport Light from \"./GroupLight\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport ColorTempPicker from \"./ColorTempPicker\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\r\nimport { cieToRgb, colorTemperatureToRgb } from \"../color\";\r\n\r\nconst Group = ({ HOST_IP, api_key, id, group, lights, scenes }) => {\r\n  const [showContainer, setShowContainer] = useState(\"closed\");\r\n  const [sceneModal, setSceneModal] = useState(false);\r\n  const [lightsCapabilities, setLightsCapabilities] = useState([]);\r\n\r\n  const barIconVariants = {\r\n    opened: {\r\n      opacity: 1,\r\n    },\r\n    closed: {\r\n      opacity: 0,\r\n    }\r\n  }\r\n\r\n  const inspectLightsCapabilities = () => {\r\n    for (const [index, light] of group.lights.entries()) {\r\n      if (\"xy\" in lights[light][\"state\"] && !lightsCapabilities.includes('xy')) {\r\n        setLightsCapabilities([...lightsCapabilities, \"xy\"]);\r\n      }\r\n      if (\"ct\" in lights[light][\"state\"] && !lightsCapabilities.includes('ct')) {\r\n        setLightsCapabilities([...lightsCapabilities, \"ct\"]);\r\n      }\r\n    };\r\n  }\r\n  inspectLightsCapabilities();\r\n  console.log(lightsCapabilities);\r\n\r\n  const defaultContainerView = () => {\r\n    if (showContainer === \"closed\") {\r\n      if (lightsCapabilities.includes('xy')) {\r\n        setShowContainer(\"colorPicker\");\r\n      }\r\n      else if (lightsCapabilities.includes('ct')) {\r\n        setShowContainer(\"colorTempPicker\");\r\n      }\r\n      else {\r\n        setShowContainer(\"lights\");\r\n      }\r\n    } else {\r\n      setShowContainer(\"closed\");\r\n    }\r\n  }\r\n\r\n  const handleToggleChange = (state) => {\r\n    const newState = {\r\n      on: state,\r\n    };\r\n    group.state[\"any_on\"] = state;\r\n    if (!state)\r\n      setShowContainer(\"closed\");\r\n    console.log(\"Apply state \" + JSON.stringify(newState));\r\n    axios.put(`${HOST_IP}/api/${api_key}/groups/${id}/action`, newState);\r\n  };\r\n\r\n  const handleBriChange = (state) => {\r\n    group.action[\"bri\"] = state;\r\n    const newState = {\r\n      bri: state,\r\n    };\r\n    console.log(\"Apply state \" + JSON.stringify(newState));\r\n    axios.put(`${HOST_IP}/api/${api_key}/groups/${id}/action`, newState);\r\n  };\r\n\r\n  const statusLights = () => {\r\n    let onLights = 0;\r\n    let offLights = 0;\r\n    for (const [index, light] of group.lights.entries()) {\r\n      if (lights[light][\"state\"][\"on\"] === true) onLights = onLights + 1;\r\n      else  offLights = offLights + 1;\r\n    }\r\n    if (onLights === 0) {\r\n      return \"All lights off\"\r\n    } else if ( offLights === 0) {\r\n        return \"All lights on\"\r\n    } else {\r\n       return onLights + \" lights on\"\r\n    }\r\n  };\r\n\r\n  const debouncedChangeHandler = useCallback(\r\n    debounce(handleBriChange, 300),\r\n    []\r\n  );\r\n\r\n  const getStyle = () => {\r\n    if (group.state[\"any_on\"]) {\r\n      let lightBg = \"linear-gradient(45deg, \";\r\n      let step = 100 / group[\"lights\"].length;\r\n      for (const [index, light] of group.lights.entries()) {\r\n        if (lights[light][\"state\"][\"colormode\"] === \"xy\") {\r\n          if (group[\"lights\"].length === 1) {\r\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\r\n          }\r\n          lightBg =\r\n            lightBg +\r\n            cieToRgb(\r\n              lights[light][\"state\"][\"xy\"][0],\r\n              lights[light][\"state\"][\"xy\"][1],\r\n              254\r\n            ) +\r\n            \" \" +\r\n            Math.floor(step * (index + 1)) +\r\n            \"%,\";\r\n        } else if (lights[light][\"state\"][\"colormode\"] === \"ct\") {\r\n          if (group[\"lights\"].length === 1) {\r\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\r\n          }\r\n          lightBg =\r\n            lightBg +\r\n            colorTemperatureToRgb(lights[light][\"state\"][\"ct\"]) +\r\n            \" \" +\r\n            Math.floor(step * (index + 1)) +\r\n            \"%,\";\r\n        } else {\r\n          if (group[\"lights\"].length === 1) {\r\n            lightBg = lightBg + \"rgba(200,200,200,1) 0%,\";\r\n          }\r\n          lightBg =\r\n            lightBg +\r\n            \"rgba(255,212,93,1) \" +\r\n            Math.floor(step * (index + 1)) +\r\n            \"%,\";\r\n        }\r\n      }\r\n      return {\r\n        background: lightBg.slice(0, -1) + \")\",\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupCard\">\r\n      <Scenes\r\n        HOST_IP={HOST_IP}\r\n        api_key={api_key}\r\n        groupId={id}\r\n        scenes={scenes}\r\n        sceneModal={sceneModal}\r\n        setSceneModal={setSceneModal}\r\n      />\r\n      <div className=\"row top\">\r\n        <div className=\"gradient\" style={getStyle()}>\r\n\r\n          {group[\"type\"] === \"Zone\" ? (\r\n            <BsFillHouseDoorFill style={{ fill: group.state[\"any_on\"] ? \"#3a3a3a\" : \"#ddd\" }} />\r\n          ) : (\r\n              <FaCouch style={{ fill: group.state[\"any_on\"] ? \"#3a3a3a\" : \"#ddd\" }} />\r\n            )}\r\n        </div>\r\n        <div className=\"text\">\r\n          <p className=\"name\"> {group.name} </p>\r\n          <p className=\"subtext\">\r\n            {statusLights()}\r\n          </p>\r\n        </div>\r\n        <div className=\"switchContainer\">\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              defaultValue={group.state[\"any_on\"]}\r\n              defaultChecked={group.state[\"any_on\"]}\r\n              onChange={(e) => handleToggleChange(e.target.checked)}\r\n            />\r\n            <span className=\"slider\"> </span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"row background\">\r\n        <AnimatePresence initial={false}>\r\n\r\n          {group.state[\"any_on\"] && (\r\n            <motion.div className=\"sliderContainer\"\r\n              initial=\"collapsed\"\r\n              animate=\"open\"\r\n              exit=\"collapsed\"\r\n              variants={{\r\n                open: {\r\n                  opacity: 1,\r\n                  height: \"auto\",\r\n                },\r\n                collapsed: {\r\n                  opacity: 0,\r\n                  height: 0,\r\n                },\r\n              }}\r\n              transition={{\r\n                duration: 0.3,\r\n              }}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"254\"\r\n                defaultValue={group.action[\"bri\"]}\r\n                step=\"1\"\r\n                className=\"slider\"\r\n                onChange={(e) => debouncedChangeHandler(parseInt(e.target.value))}\r\n              />\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      <AnimateSharedLayout>\r\n        {showContainer !== \"closed\" && (\r\n          <motion.div className=\"row buttons\"\r\n            initial=\"closed\"\r\n            animate={showContainer === \"closed\" ? \"closed\" : \"opened\"}\r\n            variants={barIconVariants}>\r\n            <motion.div className={`btn ${lightsCapabilities.includes('xy') ? \"\" : \"disabled\"}`}\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}\r\n              variants={barIconVariants}>\r\n              <FaPalette onClick={lightsCapabilities.includes('xy') ? () => setShowContainer(\"colorPicker\") : false} />\r\n            </motion.div>\r\n            <motion.div className={`btn ${lightsCapabilities.includes('ct') ? \"\" : \"disabled\"}`}\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}>\r\n              <MdInvertColors onClick={lightsCapabilities.includes('ct') ? () => setShowContainer(\"colorTempPicker\") : false} />\r\n            </motion.div>\r\n            <motion.div className=\"btn\"\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}>\r\n              <FaImages onClick={() => setSceneModal(true)} />\r\n            </motion.div>\r\n            <motion.div className=\"btn\"\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.9 }}>\r\n              <FaLightbulb onClick={() => setShowContainer(\"lights\")} />\r\n            </motion.div>\r\n\r\n          </motion.div >\r\n      )}\r\n  <motion.div className=\"row colorpicker\">\r\n          <AnimatePresence initial={false} exitBeforeEnter>\r\n\r\n            {showContainer === \"colorPicker\" && (\r\n              <motion.section\r\n                key=\"content\"\r\n                initial=\"collapsed\"\r\n                animate=\"open\"\r\n                exit=\"collapsed\"\r\n                variants={{\r\n                  open: {\r\n                    opacity: 1,\r\n                    scale: 1,\r\n                    height: \"auto\",\r\n                  },\r\n                  collapsed: {\r\n                    opacity: 0,\r\n                    scale: .5,\r\n                    height: 0,\r\n                  },\r\n                }}\r\n                transition={{\r\n                  duration: 0.3,\r\n                }}\r\n              >\r\n                <ColorPicker\r\n                  HOST_IP={HOST_IP}\r\n                  api_key={api_key}\r\n                  lights={lights}\r\n                  groupLights={group.lights}\r\n                />\r\n              </motion.section>\r\n            )}\r\n            {showContainer === \"colorTempPicker\" && (\r\n              <motion.section\r\n                key=\"content\"\r\n                initial=\"collapsed\"\r\n                animate=\"open\"\r\n                exit=\"collapsed\"\r\n                variants={{\r\n                  open: {\r\n                    opacity: 1,\r\n                    height: \"auto\",\r\n                    scale: 1,\r\n                  },\r\n                  collapsed: {\r\n                    opacity: 0,\r\n                    height: 0,\r\n                  },\r\n                }}\r\n                transition={{\r\n                  duration: 0.3,\r\n                }}\r\n              >\r\n                <ColorTempPicker\r\n                  HOST_IP={HOST_IP}\r\n                  api_key={api_key}\r\n                  groupId={id}\r\n                  group={group}\r\n                />\r\n              </motion.section>\r\n            )}\r\n            {showContainer === \"lights\" && (\r\n              <motion.div\r\n                className=\"lights\"\r\n                initial=\"collapsed\"\r\n                animate=\"open\"\r\n                exit=\"collapsed\"\r\n                variants={{\r\n                  open: {\r\n                    opacity: 1,\r\n                    height: \"auto\",\r\n                  },\r\n                  collapsed: {\r\n                    opacity: 0,\r\n                    height: 0,\r\n                  },\r\n                }}\r\n                transition={{\r\n                  duration: 0.3,\r\n                }}\r\n              >\r\n\r\n                {group.lights.map((light) => (\r\n                  <Light\r\n                    HOST_IP={HOST_IP}\r\n                    api_key={api_key}\r\n                    key={light}\r\n                    id={light}\r\n                    light={lights[light]}\r\n                  />\r\n                ))}\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </motion.div>\r\n      </AnimateSharedLayout >\r\n      <AnimatePresence>\r\n        <div className=\"row bottom\">\r\n          <motion.div className=\"expandbtn\"\r\n            initial=\"collapsed\"\r\n            animate={showContainer === \"closed\" ? \"collapsed\" : \"open\"}\r\n            whileHover={{ scale: 1.2 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            variants={{\r\n              open: {\r\n                rotate: 180\r\n              },\r\n              collapsed: {\r\n                rotate: 0\r\n              },\r\n            }}\r\n            transition={{\r\n              duration: 0.3,\r\n            }}\r\n          >\r\n\r\n            <FaChevronDown onClick={() => defaultContainerView()} />\r\n          </motion.div>\r\n        </div>\r\n      </AnimatePresence>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Group from \"../containers/Group\";\n\n\nexport default function Groups({ HOST_IP, API_KEY }) {\n  const [config, setConfig] = useState({\n    config: {},\n    lights: {},\n    groups: {},\n    scenes: {},\n  });\n\n  useEffect(() => {\n    const fetchConfig = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/api/${API_KEY}`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setConfig(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    fetchConfig();\n    const interval = setInterval(() => {\n      fetchConfig();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [HOST_IP, API_KEY]);\n\n  return (\n    <div className=\"inner\">\n      <div className=\"cardGrid\">\n        {Object.entries(config.groups)\n          .filter((group) => group[1].type !== \"Entertainment\")\n          .map(([id, group]) => (\n            <Group\n              key={id}\n              api_key={API_KEY}\n              HOST_IP={HOST_IP}\n              id={id}\n              group={group}\n              lights={config.lights}\n              scenes={config.scenes}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}
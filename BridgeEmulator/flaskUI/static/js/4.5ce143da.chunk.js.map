{"version":3,"sources":["color.js","containers/Scenes.js","containers/Light.js","containers/ColorPicker.js","containers/Group.js","views/Groups.js"],"names":["cieToRgb","x","y","brightness","undefined","z","Y","toFixed","X","Z","red","green","blue","Math","pow","round","isNaN","floor","colorTemperatureToRgb","mireds","hectemp","log","rgbToCie","parseFloat","Scenes","user","groupId","scenes","console","Object","entries","filter","scene","group","map","id","className","onClick","axios","put","applyScene","style","color","name","Light","light","switchLight","newState","JSON","stringify","useState","state","background","type","defaultChecked","onChange","e","currentTarget","checked","min","max","defaultValue","value","KelvinPicker","lights","groupLights","pickerRef","useRef","picker","colors","push","rgb","xy","useEffect","current","iro","ColorPicker","layout","component","ui","Wheel","options","on","ref","Group","groupState","setgroupState","showContainer","setShowContainer","setGroup","lightBg","step","length","index","slice","getStyle","action","Groups","config","groups","setConfig","get","then","fetchedData","data","keys"],"mappings":"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","file":"static/js/4.5ce143da.chunk.js","sourcesContent":["export function cieToRgb(x, y, brightness) {\n  //Set to maximum brightness if no custom value was given (Not the slick ECMAScript 6 way for compatibility reasons)\n  if (brightness === undefined) {\n    brightness = 254;\n  }\n\n  var z = 1.0 - x - y;\n  var Y = (brightness / 254).toFixed(2);\n  var X = Y / y * x;\n  var Z = Y / y * z;\n\n  //Convert to RGB using Wide RGB D65 conversion\n  var red = X * 1.656492 - Y * 0.354851 - Z * 0.255038;\n  var green = -X * 0.707196 + Y * 1.655397 + Z * 0.036152;\n  var blue = X * 0.051713 - Y * 0.121364 + Z * 1.01153;\n\n  //If red, green or blue is larger than 1.0 set it back to the maximum of 1.0\n  if (red > blue && red > green && red > 1.0) {\n    green = green / red;\n    blue = blue / red;\n    red = 1.0;\n  } else if (green > blue && green > red && green > 1.0) {\n    red = red / green;\n    blue = blue / green;\n    green = 1.0;\n  } else if (blue > red && blue > green && blue > 1.0) {\n    red = red / blue;\n    green = green / blue;\n    blue = 1.0;\n  }\n\n  //Reverse gamma correction\n  red =\n    red <= 0.0031308\n      ? 12.92 * red\n      : (1.0 + 0.055) * Math.pow(red, 1.0 / 2.4) - 0.055;\n  green =\n    green <= 0.0031308\n      ? 12.92 * green\n      : (1.0 + 0.055) * Math.pow(green, 1.0 / 2.4) - 0.055;\n  blue =\n    blue <= 0.0031308\n      ? 12.92 * blue\n      : (1.0 + 0.055) * Math.pow(blue, 1.0 / 2.4) - 0.055;\n\n  //Convert normalized decimal to decimal\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n\n  if (isNaN(red)) red = 0;\n\n  if (isNaN(green)) green = 0;\n\n  if (isNaN(blue)) blue = 0;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function colorTemperatureToRgb(mireds) {\n  var hectemp = 20000.0 / mireds;\n\n  var red, green, blue;\n\n  if (hectemp <= 66) {\n    red = 255;\n    green = 99.4708025861 * Math.log(hectemp) - 161.1195681661;\n    blue =\n      hectemp <= 19\n        ? 0\n        : 138.5177312231 * Math.log(hectemp - 10) - 305.0447927307;\n  } else {\n    red = 329.698727446 * Math.pow(hectemp - 60, -0.1332047592);\n    green = 288.1221695283 * Math.pow(hectemp - 60, -0.0755148492);\n    blue = 255;\n  }\n\n  red = red > 255 ? 255 : red;\n  green = green > 255 ? 255 : green;\n  blue = blue > 255 ? 255 : blue;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function rgbToCie(red, green, blue) {\n  //Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  red =\n    red > 0.04045 ? Math.pow((red + 0.055) / (1.0 + 0.055), 2.4) : red / 12.92;\n  green =\n    green > 0.04045\n      ? Math.pow((green + 0.055) / (1.0 + 0.055), 2.4)\n      : green / 12.92;\n  blue =\n    blue > 0.04045\n      ? Math.pow((blue + 0.055) / (1.0 + 0.055), 2.4)\n      : blue / 12.92;\n\n  //RGB values to XYZ using the Wide RGB D65 conversion formula\n  var X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  var Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  var Z = red * 0.000088 + green * 0.07231 + blue * 0.986039;\n\n  //Calculate the xy values from the XYZ values\n  var x = (X / (X + Y + Z)).toFixed(4);\n  var y = (Y / (X + Y + Z)).toFixed(4);\n\n  if (isNaN(x)) x = 0;\n\n  if (isNaN(y)) y = 0;\n\n  return [parseFloat(x), parseFloat(y)];\n}\n","import axios from \"axios\";\n\nconst applyScene = (user, scene) => {\naxios\n  .put(\n    `/api/${user}/groups/0/action`,\n    {'scene': scene}\n  )\n};\n\nconst Scenes = ({user, groupId, scenes}) => {\n  console.log(\"group is \" + groupId)\n  return (\n    <>\n    {Object.entries(scenes).filter(scene => scene[1].group === groupId).map(([id, scene]) => (\n      <div className=\"sceneContainer\" onClick={() => applyScene(id)} key={id}>\n        <p style={{color: '#ccc'}}>{scene.name}</p>\n      </div>\n    ))}\n    <div className=\"clear\"></div>\n    </>\n);\n}\n\nexport default Scenes\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport {cieToRgb, colorTemperatureToRgb } from \"../color\";\nimport { FaLightbulb } from \"react-icons/fa\";\n\nconst Light = ({ user, id, light }) => {\n\n  const switchLight = (newState) => {\n  console.log('Apply state ' + JSON.stringify(newState));\n  axios\n    .put(\n      `/api/${user}/lights/${id}/state`,\n      newState\n    )\n  };\n\n  const [state, setState] = useState(light.state)\n\n  const getStyle = () => {\n    let lightBg;\n    if (state['colormode'] === 'xy') {\n      lightBg = cieToRgb(state['xy'][0], state['xy'][1], 254)\n    } else if (state['colormode'] === 'ct') {\n      lightBg = colorTemperatureToRgb(state['ct'])\n    }\n    else {\n      lightBg = 'linear-gradient(90deg, rgba(255,212,93,1))';\n    }\n    return { background: lightBg};\n  }\n\n  return (\n      <div className={`lightContainer ${state['on'] ? 'textDark' : 'textLight'}`} style={getStyle()}>\n          <div className=\"iconContainer\">\n            <FaLightbulb/>\n          </div>\n          <div className=\"textContainer\">\n          <p>{ light.name }</p>\n          </div>\n          <div className=\"switchContainer\">\n            <label className=\"switch\">\n              <input type=\"checkbox\"\n                defaultChecked={state['on']}\n                onChange={(e) => switchLight({'on': e.currentTarget.checked})}\n              />\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n          <div className=\"slideContainer\">\n            <input type=\"range\" min=\"1\" max=\"254\" defaultValue=\"50\" className=\"slider\"\n              onChange={(e) => switchLight({'bri': e.currentTarget.value})}\n            />\n          </div>\n        </div>\n  )\n}\n\nexport default Light\n","import React, { useRef, useEffect } from \"react\";\nimport { cieToRgb, rgbToCie } from \"../color\";\nimport iro from \"@jaames/iro\";\nimport axios from \"axios\";\n\nexport default function KelvinPicker({ user, lights, groupLights }) {\n  const pickerRef = useRef(null);\n  const picker = useRef(null);\n\n  let colors = [];\n  for (const [index, light] of groupLights.entries()) {\n    if ('xy' in lights[light]['state']) {\n      colors.push(cieToRgb(lights[light]['state']['xy'][0], lights[light]['state']['xy'][1], 254));\n    }\n  }\n  const onChange = (newState) => {\n  let rgb = newState.rgb\n\n  console.log(newState.rgb)\n  console.log('Apply state ' + JSON.stringify(newState));\n  axios\n    .put(\n      `/api/${user}/lights/${groupLights[newState['index']]}/state`,\n      {xy: rgbToCie(rgb['r'], rgb['g'], rgb['b'])}\n    )\n  };\n\n  useEffect(() => {\n    if (pickerRef.current && !picker.current) {\n      picker.current = new iro.ColorPicker(pickerRef.current, {\n        layout: [\n          {\n            component: iro.ui.Wheel,\n            options: {},\n          },\n        ],\n        colors: colors\n      });\n      //console.log(picker.current.state.color.rgb)\n      picker.current.on(\"input:end\", onChange);\n    }\n  }, [pickerRef.current]);\n  return <div ref={pickerRef}></div>;\n}\n","import { FaCaretLeft, FaList  ,  FaPalette, FaTint, FaCouch} from \"react-icons/fa\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport color from \"../color\";\nimport Scenes from \"./Scenes\"\nimport Light from \"./Light\"\nimport ColorPicker from \"./ColorPicker\"\nimport {cieToRgb, colorTemperatureToRgb } from \"../color\";\n\nconst Group = ({user, id, group, groupState, setgroupState, lights, scenes}) => {\n\n  const [showContainer, setShowContainer] = useState('closed');\n  const [state, setState] = useState(group.state)\n\n\n  const setGroup = (newState) => {\n  console.log('Apply state ' + JSON.stringify(newState));\n  axios\n    .put(\n      `/api/${user}/groups/${id}/action`,\n      newState\n    )\n  };\n\n  const getStyle = () => {\n    if (group.state['any_on']) {\n      let lightBg = 'linear-gradient(90deg, ';\n      let step = 100 / group[\"lights\"].length;\n      for (const [index, light] of group.lights.entries()) {\n        if (lights[light]['state']['colormode'] === 'xy') {\n          lightBg = lightBg + cieToRgb(lights[light]['state']['xy'][0], lights[light]['state']['xy'][1], 254) + ' ' + Math.floor(step * (index + 1)) + '%,';\n        } else if (lights[light]['state']['colormode'] === 'ct') {\n          lightBg = lightBg + colorTemperatureToRgb(lights[light]['state']['ct']) + ' ' + Math.floor(step * (index + 1)) + '%,';\n        }\n        else {\n          lightBg = lightBg + 'rgba(255,212,93,1) ' + Math.floor(step * (index + 1)) + '%,';\n        }\n      }\n      return { background: lightBg.slice(0, -1) + ')' };\n    }\n  }\n\n\n  return (\n    <div className={`groupContainer ${group.state['any_on'] ? 'textDark' : 'textLight'} ${showContainer !== 'closed' ? 'expanded' : ''}`} style={getStyle()}>\n      {showContainer !== 'closed' &&\n        <div className=\"header\">\n          <div onClick={() => setShowContainer('closed')}>\n          <div className=\"icon\"><FaCaretLeft/></div>\n          <div className=\"text\">close</div>\n        </div>\n        <div className={`tab ${showContainer === 'lights' ? 'active' : ''}`} onClick={() => setShowContainer('lights')}><FaList/></div>\n        <div className={`tab ${showContainer === 'scenes' ? 'active' : ''}`} onClick={() => setShowContainer('scenes')}><FaPalette/></div>\n        <div className={`tab ${showContainer === 'colorPicker' ? 'active' : ''}`} onClick={() => setShowContainer('colorPicker')}><FaTint/></div>\n      </div>}\n      <div className=\"overlayBtn\" onClick={() => setShowContainer('colorPicker')}></div>\n      <div className=\"iconContainer\">\n        <FaCouch/>\n      </div>\n      <div className=\"textContainer\">\n        <p>{group.name}</p>\n      </div>\n      <div className=\"switchContainer\">\n        <label className=\"switch\">\n          <input type=\"checkbox\"\n            defaultChecked={state['any_on']}\n            onChange={(e) => setGroup({'on': e.currentTarget.checked})}\n          />\n          <span className=\"slider\"></span>\n        </label>\n      </div>\n      <div className=\"slideContainer\">\n        <input type=\"range\" min=\"1\" max=\"254\" defaultValue={group.action['bri']} step=\"1\" className=\"slider\"\n          onChange={(e) => setGroup({'bri': e.currentTarget.value})}\n        />\n      </div>\n      <div className=\"dimmer\">\n        {showContainer === 'scenes' && <Scenes\n          user={user}\n          groupId={id}\n          scenes={ scenes }\n        />}\n        {showContainer === 'lights' &&\n        <div className=\"lightsContainer\">\n          {group.lights.map((light) => (<Light\n            user={user}\n            key={light}\n            id={light}\n            light={lights[light]}\n          />\n          ))}\n        </div>}\n        {showContainer === 'colorPicker' && <ColorPicker\n            user={user}\n            lights={ lights }\n            groupLights = { group.lights }\n        />}\n      </div>\n    </div>\n  )\n}\n\nexport default Group\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Group from \"../containers/Group\"\n\nexport default function Groups() {\n\n  const [config, setConfig] = useState({ config: {}, lights: {}, groups: {}, scenes: {}});\n\n  const [groupState, setgroupState] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/local\")\n      .then((fetchedData) => {\n        setConfig(fetchedData.data);\n      });\n  }, [groupState]);\n\n  const switchLight = (state) => {\n    console.log(`Current State is: ${state}`, `Switchting to ${!state}`);\n    setgroupState(!state);\n  };\n\n  return (\n  <div className=\"content\">\n    <div className=\"cardGrid\">\n      {Object.entries(config.groups).filter(group => group[1].type !== 'Entertainment').map(([id, group]) => (\n          <Group\n            key={id}\n            user={Object.keys(config.config['whitelist'])[0]}\n            id={id}\n            group={group}\n            groupState={groupState}\n            setgroupState={setgroupState}\n            lights={config.lights}\n            scenes={config.scenes}\n          />\n      ))}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}
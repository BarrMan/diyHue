{"version":3,"sources":["color.js","containers/Scenes.js","containers/Light.js","containers/ColorPicker.js","containers/Group.js","views/Groups.js"],"names":["cieToRgb","x","y","brightness","undefined","z","Y","toFixed","X","Z","red","green","blue","Math","pow","round","isNaN","floor","colorTemperatureToRgb","mireds","hectemp","log","rgbToCie","parseFloat","Scenes","api_key","groupId","scenes","Object","entries","filter","scene","group","map","id","className","onClick","axios","put","applyScene","style","color","name","Light","light","switchLight","newState","console","JSON","stringify","useState","state","background","type","defaultChecked","onChange","e","currentTarget","checked","min","max","defaultValue","value","KelvinPicker","lights","groupLights","pickerRef","useRef","picker","animation","setAnimation","useEffect","colors","push","rgb","xy","current","iro","ColorPicker","layout","component","ui","Wheel","options","on","ref","Group","showContainer","setShowContainer","toggleState","setToggleState","action","briState","setBriState","lightBg","step","length","index","slice","getStyle","handleToggleChange","target","handleBriChange","Groups","config","groups","setConfig","API_KEY","setAPI_KEY","get","then","result","data","fetchConfig","catch","error","fetchedData","interval","setInterval","clearInterval"],"mappings":"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","file":"static/js/4.5f3718b2.chunk.js","sourcesContent":["export function cieToRgb(x, y, brightness) {\n  //Set to maximum brightness if no custom value was given (Not the slick ECMAScript 6 way for compatibility reasons)\n  if (brightness === undefined) {\n    brightness = 254;\n  }\n\n  var z = 1.0 - x - y;\n  var Y = (brightness / 254).toFixed(2);\n  var X = Y / y * x;\n  var Z = Y / y * z;\n\n  //Convert to RGB using Wide RGB D65 conversion\n  var red = X * 1.656492 - Y * 0.354851 - Z * 0.255038;\n  var green = -X * 0.707196 + Y * 1.655397 + Z * 0.036152;\n  var blue = X * 0.051713 - Y * 0.121364 + Z * 1.01153;\n\n  //If red, green or blue is larger than 1.0 set it back to the maximum of 1.0\n  if (red > blue && red > green && red > 1.0) {\n    green = green / red;\n    blue = blue / red;\n    red = 1.0;\n  } else if (green > blue && green > red && green > 1.0) {\n    red = red / green;\n    blue = blue / green;\n    green = 1.0;\n  } else if (blue > red && blue > green && blue > 1.0) {\n    red = red / blue;\n    green = green / blue;\n    blue = 1.0;\n  }\n\n  //Reverse gamma correction\n  red =\n    red <= 0.0031308\n      ? 12.92 * red\n      : (1.0 + 0.055) * Math.pow(red, 1.0 / 2.4) - 0.055;\n  green =\n    green <= 0.0031308\n      ? 12.92 * green\n      : (1.0 + 0.055) * Math.pow(green, 1.0 / 2.4) - 0.055;\n  blue =\n    blue <= 0.0031308\n      ? 12.92 * blue\n      : (1.0 + 0.055) * Math.pow(blue, 1.0 / 2.4) - 0.055;\n\n  //Convert normalized decimal to decimal\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n\n  if (isNaN(red)) red = 0;\n\n  if (isNaN(green)) green = 0;\n\n  if (isNaN(blue)) blue = 0;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function colorTemperatureToRgb(mireds) {\n  var hectemp = 20000.0 / mireds;\n\n  var red, green, blue;\n\n  if (hectemp <= 66) {\n    red = 255;\n    green = 99.4708025861 * Math.log(hectemp) - 161.1195681661;\n    blue =\n      hectemp <= 19\n        ? 0\n        : 138.5177312231 * Math.log(hectemp - 10) - 305.0447927307;\n  } else {\n    red = 329.698727446 * Math.pow(hectemp - 60, -0.1332047592);\n    green = 288.1221695283 * Math.pow(hectemp - 60, -0.0755148492);\n    blue = 255;\n  }\n\n  red = red > 255 ? 255 : red;\n  green = green > 255 ? 255 : green;\n  blue = blue > 255 ? 255 : blue;\n\n  return \"rgba(\" + Math.floor(red) + \",\" +  Math.floor(green) + \",\" + Math.floor(blue) + \",1)\";\n}\n\nexport function rgbToCie(red, green, blue) {\n  //Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  red =\n    red > 0.04045 ? Math.pow((red + 0.055) / (1.0 + 0.055), 2.4) : red / 12.92;\n  green =\n    green > 0.04045\n      ? Math.pow((green + 0.055) / (1.0 + 0.055), 2.4)\n      : green / 12.92;\n  blue =\n    blue > 0.04045\n      ? Math.pow((blue + 0.055) / (1.0 + 0.055), 2.4)\n      : blue / 12.92;\n\n  //RGB values to XYZ using the Wide RGB D65 conversion formula\n  var X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  var Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  var Z = red * 0.000088 + green * 0.07231 + blue * 0.986039;\n\n  //Calculate the xy values from the XYZ values\n  var x = (X / (X + Y + Z)).toFixed(4);\n  var y = (Y / (X + Y + Z)).toFixed(4);\n\n  if (isNaN(x)) x = 0;\n\n  if (isNaN(y)) y = 0;\n\n  return [parseFloat(x), parseFloat(y)];\n}\n","import axios from \"axios\";\n\nconst Scenes = ({api_key, groupId, scenes}) => {\n  const applyScene = (scene) => {\n    axios\n      .put(\n        `/api/${api_key}/groups/0/action`,\n        {'scene': scene}\n      )\n    };\n\n  return (\n    <>\n    {Object.entries(scenes).filter(scene => scene[1].group === groupId).map(([id, scene]) => (\n      <div className=\"sceneContainer\" onClick={() => applyScene(id)} key={id}>\n        <p style={{color: '#ccc'}}>{scene.name}</p>\n      </div>\n    ))}\n    <div className=\"clear\"></div>\n    </>\n);\n}\n\nexport default Scenes\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport {cieToRgb, colorTemperatureToRgb } from \"../color\";\nimport { FaLightbulb } from \"react-icons/fa\";\n\nconst Light = ({ api_key, id, light }) => {\n\n  const switchLight = (newState) => {\n  console.log('Apply state ' + JSON.stringify(newState));\n  axios\n    .put(\n      `/api/${api_key}/lights/${id}/state`,\n      newState\n    )\n  };\n\n  const [state, setState] = useState(light.state)\n\n  const getStyle = () => {\n    let lightBg;\n    if (state['colormode'] === 'xy') {\n      lightBg = cieToRgb(state['xy'][0], state['xy'][1], 254)\n    } else if (state['colormode'] === 'ct') {\n      lightBg = colorTemperatureToRgb(state['ct'])\n    }\n    else {\n      lightBg = 'linear-gradient(90deg, rgba(255,212,93,1))';\n    }\n    return { background: lightBg};\n  }\n\n  return (\n      <div className={`lightContainer ${state['on'] ? 'textDark' : 'textLight'}`} style={getStyle()}>\n          <div className=\"iconContainer\">\n            <FaLightbulb/>\n          </div>\n          <div className=\"textContainer\">\n          <p>{ light.name }</p>\n          </div>\n          <div className=\"switchContainer\">\n            <label className=\"switch\">\n              <input type=\"checkbox\"\n                defaultChecked={state['on']}\n                onChange={(e) => switchLight({'on': e.currentTarget.checked})}\n              />\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n          <div className=\"slideContainer\">\n            <input type=\"range\" min=\"1\" max=\"254\" defaultValue=\"50\" className=\"slider\"\n              onChange={(e) => switchLight({'bri': e.currentTarget.value})}\n            />\n          </div>\n        </div>\n  )\n}\n\nexport default Light\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { cieToRgb, rgbToCie } from \"../color\";\nimport iro from \"@jaames/iro\";\nimport axios from \"axios\";\n\n\nexport default function KelvinPicker({ api_key, lights, groupLights }) {\n  const pickerRef = useRef(null);\n  const picker = useRef(null);\n\n  const [animation, setAnimation] = useState(true);\n\n  useEffect(() => {\n    // Component loads the first time... \n    // animation is true => hide class will be returned, so it is opacity 0 (css file at the end)\n    // It will be set to false so class *line 54* will be switched\n    setAnimation(false)\n\n    //This return function will be fired when the component gets unmounted, so to be sure the color wheel gets faded out\n    return () => {\n      setAnimation(false);\n    }\n  }, []);\n\n  let colors = [];\n  for (const [index, light] of groupLights.entries()) {\n    if ('xy' in lights[light]['state']) {\n      colors.push(cieToRgb(lights[light]['state']['xy'][0], lights[light]['state']['xy'][1], 254));\n    }\n  }\n  const onChange = (newState) => {\n  let rgb = newState.rgb\n\n  console.log(newState.rgb)\n  console.log('Apply state ' + JSON.stringify(newState));\n  axios\n    .put(\n      `/api/${api_key}/lights/${groupLights[newState['index']]}/state`,\n      {xy: rgbToCie(rgb['r'], rgb['g'], rgb['b'])}\n    )\n  };\n\n  useEffect(() => {\n    if (pickerRef.current && !picker.current) {\n      picker.current = new iro.ColorPicker(pickerRef.current, {\n        layout: [\n          {\n            component: iro.ui.Wheel,\n            options: {},\n          },\n        ],\n        colors: colors\n      });\n      //console.log(picker.current.state.color.rgb)\n      picker.current.on(\"input:end\", onChange);\n    }\n  }, [pickerRef.current]);\n  return <div ref={pickerRef} className={animation ? \"hide\" : \"show\"}></div>;\n}","import { FaCaretLeft, FaList  ,  FaPalette, FaTint, FaCouch} from \"react-icons/fa\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport color from \"../color\";\nimport Scenes from \"./Scenes\"\nimport Light from \"./Light\"\nimport ColorPicker from \"./ColorPicker\"\nimport {cieToRgb, colorTemperatureToRgb } from \"../color\";\n\nconst Group = ({api_key, id, group, lights, scenes}) => {\n\n  const [showContainer, setShowContainer] = useState('closed');\n  const [toggleState, setToggleState] = useState(group.state['any_on']);\n  const [briState, setBriState] = useState(group.action['bri']);\n\n  const handleToggleChange = (state) => {\n    const newState = {'on': state};\n    setToggleState(state);\n    console.log('Apply state ' + JSON.stringify(newState));\n    axios.put(`/api/${api_key}/groups/${id}/action`, newState);\n  }\n\n  const handleBriChange = (state) => {\n    const newState = {'bri': state};\n    setBriState(state);\n    console.log('Apply state ' + JSON.stringify(newState));\n    axios.put(`/api/${api_key}/groups/${id}/action`, newState);\n  }\n\n  const getStyle = () => {\n    if (group.state['any_on']) {\n      let lightBg = 'linear-gradient(90deg, ';\n      let step = 100 / group[\"lights\"].length;\n      for (const [index, light] of group.lights.entries()) {\n        if (lights[light]['state']['colormode'] === 'xy') {\n          lightBg = lightBg + cieToRgb(lights[light]['state']['xy'][0], lights[light]['state']['xy'][1], 254) + ' ' + Math.floor(step * (index + 1)) + '%,';\n        } else if (lights[light]['state']['colormode'] === 'ct') {\n          lightBg = lightBg + colorTemperatureToRgb(lights[light]['state']['ct']) + ' ' + Math.floor(step * (index + 1)) + '%,';\n        }\n        else {\n          lightBg = lightBg + 'rgba(255,212,93,1) ' + Math.floor(step * (index + 1)) + '%,';\n        }\n      }\n      return { background: lightBg.slice(0, -1) + ')' };\n    }\n  }\n\n\n  return (\n    <div className={`groupContainer ${group.state['any_on'] ? 'textDark' : 'textLight'} ${showContainer !== 'closed' ? 'expanded' : ''}`} style={getStyle()}>\n      {showContainer !== 'closed' &&\n        <div className=\"header\">\n          <div onClick={() => setShowContainer('closed')}>\n          <div className=\"icon\"><FaCaretLeft/></div>\n          <div className=\"text\">close</div>\n        </div>\n        <div className={`tab ${showContainer === 'lights' ? 'active' : ''}`} onClick={() => setShowContainer('lights')}><FaList/></div>\n        <div className={`tab ${showContainer === 'scenes' ? 'active' : ''}`} onClick={() => setShowContainer('scenes')}><FaPalette/></div>\n        <div className={`tab ${showContainer === 'colorPicker' ? 'active' : ''}`} onClick={() => setShowContainer('colorPicker')}><FaTint/></div>\n      </div>}\n      <div className=\"overlayBtn\" onClick={() => setShowContainer('colorPicker')}></div>\n      <div className=\"iconContainer\">\n        <FaCouch/>\n      </div>\n      <div className=\"textContainer\">\n        <p>{group.name}</p>\n      </div>\n      <div className=\"switchContainer\">\n        <label className=\"switch\">\n          <input type=\"checkbox\"\n            value={toggleState}\n            onChange={(e) => handleToggleChange(e.target.checked)}\n          />\n          <span className=\"slider\"></span>\n        </label>\n      </div>\n      <div className=\"slideContainer\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"254\"\n          value={briState}\n          step=\"1\"\n          className=\"slider\"\n          onChange={(e) => handleBriChange(e.target.value)}\n        />\n      </div>\n      <div className=\"dimmer\">\n        {showContainer === 'scenes' && <Scenes\n          api_key={api_key}\n          groupId={id}\n          scenes={ scenes }\n        />}\n        {showContainer === 'lights' &&\n        <div className=\"lightsContainer\">\n          {group.lights.map((light) => (<Light\n            api_key={api_key}\n            key={light}\n            id={light}\n            light={lights[light]}\n          />\n          ))}\n        </div>}\n        {showContainer === 'colorPicker' && <ColorPicker\n            api_key={api_key}\n            lights={ lights }\n            groupLights = { group.lights }\n        />}\n      </div>\n    </div>\n  )\n}\n\nexport default Group\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Group from \"../containers/Group\";\n\nexport default function Groups() {\n\n  const [config, setConfig] = useState({ config: {}, lights: {}, groups: {}, scenes: {}});\n\n  const [API_KEY, setAPI_KEY] = useState();\n\n  useEffect(() => {\n    axios.get(\"/get-key\").then((result) => {\n      if (typeof result.data === \"string\" && result.data.length === 32) {\n        console.log(`API_KEY from API: ${result.data}`);\n        setAPI_KEY(result.data);\n      } else {\n        // 🔥 TODO: Promt an error when the reseived data is not the key\n        //         E.g. alert(\"Not Authorized\");\n        setAPI_KEY(\"12345678901234567890123456789012\");\n      }\n      console.log(\"debug 1\")\n      fetchConfig(); // 🔥 TODO: Move this call inside the above if statement - so that it is onyl fetching when there is a key\n    }).catch((error) => {console.error(error)});\n  }, []);\n\n  const fetchConfig = () => {\n    console.log(\"fetch\")\n    if (API_KEY !== undefined) {\n      axios\n        .get(`/api/${API_KEY}`)\n        .then((fetchedData) => {\n          console.log(fetchedData.data);\n          setConfig(fetchedData.data);\n        }).catch((error) => {console.error(error)});\n    }\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (API_KEY !== undefined) {\n        console.log(\"debug 2\")\n        fetchConfig();\n      } else {\n        console.log(\"No Key\");\n      }\n    }, 1000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [API_KEY]);\n\n  return (\n  <div className=\"content\">\n    <div className=\"cardGrid\">\n      {Object.entries(config.groups).filter(group => group[1].type !== 'Entertainment').map(([id, group]) => (\n          <Group\n            key={id}\n            api_key={API_KEY}\n            id={id}\n            group={group}\n            lights={config.lights}\n            scenes={config.scenes}\n          />\n      ))}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}